
  server:
    # HA avec 3 replicas
    ha:
      enabled: true
      replicas: 3
      raft:
        enabled: true
        setNodeId: true

        config: |
          ui = true
          
          listener "tcp" {
            tls_disable = 0
            address = "[::]:8200"
            cluster_address = "[::]:8201"
            tls_cert_file = "/vault/userconfig/vault-tls/tls.crt"
            tls_key_file  = "/vault/userconfig/vault-tls/tls.key"
          }
          
          storage "raft" {
            path = "/vault/data"
          
            retry_join {
              leader_api_addr = "https://vault-0.vault-internal:8200"
              leader_ca_cert_file = "/vault/userconfig/vault-tls/ca.crt"
            }
          
            retry_join {
              leader_api_addr = "https://vault-1.vault-internal:8200"
              leader_ca_cert_file = "/vault/userconfig/vault-tls/ca.crt"
            }
          
            retry_join {
              leader_api_addr = "https://vault-2.vault-internal:8200"
              leader_ca_cert_file = "/vault/userconfig/vault-tls/ca.crt"
            }
          }
          
          service_registration "kubernetes" {}
          
          seal "awskms" {
            region     = "eu-west-1"
            kms_key_id = "${AWS_KMS_KEY_ID}"
          }

    # Anti-affinity pour distribuer sur diff√©rents nodes
    affinity: |
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: vault
                app.kubernetes.io/instance: vault
            topologyKey: kubernetes.io/hostname

    # Resources
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi

    # Storage
    dataStorage:
      enabled: true
      size: 10Gi
      storageClass: gp3
      accessMode: ReadWriteOnce

    # Audit storage
    auditStorage:
      enabled: true
      size: 10Gi
      storageClass: gp3
      accessMode: ReadWriteOnce

    # Service
    service:
      enabled: true
      type: ClusterIP

    # Ingress
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - host: vault.example.com
          paths:
            - /
      tls:
        - secretName: vault-tls
          hosts:
            - vault.example.com

  # Vault UI
  ui:
    enabled: true
    serviceType: ClusterIP

  # Injector pour injecter secrets dans pods
  injector:
    enabled: true
    replicas: 2

    affinity: |
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: vault-agent-injector
            topologyKey: kubernetes.io/hostname

    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi