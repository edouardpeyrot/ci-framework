
# k8s/monitoring/prometheus-values.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-helm-values
  namespace: monitoring
data:
  values.yaml: |
    prometheus:
      prometheusSpec:
        retention: 30d
        retentionSize: "50GB"
        replicas: 2
        
        # HA configuration
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - prometheus
                topologyKey: kubernetes.io/hostname
        
        # Resources
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        
        # Storage
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
              storageClassName: gp3
        
        # Service monitors
        serviceMonitorSelector:
          matchLabels:
            monitoring: enabled
        
        # Additional scrape configs
        additionalScrapeConfigs:
          - job_name: 'kubernetes-pods'
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                action: replace
                regex: ([^:]+)(?::\d+)?;(\d+)
                replacement: $1:$2
                target_label: __address__
    
    # Grafana configuration
    grafana:
      enabled: true
      replicas: 2
      
      # Admin credentials from Vault
      adminPassword: ${GRAFANA_ADMIN_PASSWORD}
      
      # HA configuration
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - grafana
              topologyKey: kubernetes.io/hostname
      
      # Persistence
      persistence:
        enabled: true
        size: 10Gi
        storageClassName: gp3
      
      # Resources
      resources:
        requests:
          cpu: 250m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 1Gi
      
      # Dashboards
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: 'default'
              orgId: 1
              folder: ''
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
      
      dashboards:
        default:
          kubernetes-cluster:
            gnetId: 7249
            revision: 1
            datasource: Prometheus
          kubernetes-pods:
            gnetId: 6417
            revision: 1
            datasource: Prometheus
          node-exporter:
            gnetId: 1860
            revision: 27
            datasource: Prometheus
      
      # Data sources
      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
            - name: Prometheus
              type: prometheus
              url: http://prometheus-operated:9090
              access: proxy
              isDefault: true
            - name: Loki
              type: loki
              url: http://loki:3100
              access: proxy
      
      # Ingress
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        hosts:
          - grafana.example.com
        tls:
          - secretName: grafana-tls
            hosts:
              - grafana.example.com
    
    # AlertManager HA
    alertmanager:
      alertmanagerSpec:
        replicas: 3
        
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - alertmanager
                topologyKey: kubernetes.io/hostname
        
        storage:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 10Gi
              storageClassName: gp3
        
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
    
    # Node Exporter
    nodeExporter:
      enabled: true
    
    # Kube State Metrics
    kubeStateMetrics:
      enabled: true
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus.monitoring.svc.cluster.local:9090
      isDefault: true
