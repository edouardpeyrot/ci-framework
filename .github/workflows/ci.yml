name: Multi-Cloud CI/CD Pipeline - Go Backend & JS Frontend

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  GO_VERSION: '1.21'
  NODE_VERSION: '20'
  TERRAFORM_VERSION: '1.5.7'
  KUBERNETES_VERSION: '1.33'
  CLOUD_PROVIDER: 'aws'  # azure | gcp | aws
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

jobs:

  terraform-plan:
    name: Terraform Plan (${{ matrix.cloud }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cloud: [aws]  # Ajouter azure, gcp selon besoins
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format Check
        run: |
          cd terraform
          terraform fmt -check -recursive

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Validate
        run: |
          cd terraform
          terraform validate

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan \
            -var="cloud_provider=${{ matrix.cloud }}" \
            -out=tfplan-${{ matrix.cloud }}

      - name: Trivy Terraform Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: './terraform'
          format: 'sarif'
          output: 'trivy-terraform-${{ matrix.cloud }}.sarif'

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: [terraform-plan, build-backend, build-frontend]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve \
            -var="cloud_provider=${{ env.CLOUD_PROVIDER }}"